{"version":3,"sources":["components/Chart.js","Table.js","MUIDataTable.js","App.js","serviceWorker.js","index.js"],"names":["Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chartData","labels","datasets","label","data","backgroundColor","react_default","a","createElement","className","es","options","scales","yAxes","ticks","min","title","display","displayTitle","text","fontSize","legend","displayLegend","position","legendPosition","Component","defaultProps","counter","createData","name","URL","image","message","terms_on","projects","id","desc","b","orderBy","rows","numeric","disablePadding","EnhancedTableHead","createSortHandler","property","event","onRequestSort","_this2","_this$props","onSelectAllClick","order","numSelected","rowCount","TableHead_default","TableRow_default","TableCell_default","padding","Checkbox_default","indeterminate","checked","onChange","map","row","key","sortDirection","Tooltip_default","placement","enterDelay","TableSortLabel_default","active","direction","onClick","React","EnhancedTableToolbar","classes","Toolbar_default","classNames","root","defineProperty","highlight","Typography_default","color","variant","spacer","actions","IconButton_default","aria-label","Delete_default","FilterList_default","withStyles","theme","paddingRight","spacing","unit","palette","type","secondary","main","lighten","light","primary","dark","flex","EnhancedTable","_this3","handleRequestSort","setState","handleSelectAllClick","target","selected","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","value","isSelected","allData","console","log","_this4","_this$state","emptyRows","Math","Paper_default","Table_EnhancedTableToolbar","tableWrapper","Table_default","table","aria-labelledby","Table_EnhancedTableHead","TableBody_default","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","hover","role","aria-checked","tabIndex","component","scope","url","iconUrl","project","style","height","colSpan","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","width","marginTop","minWidth","overflowX","MUIDataTable","App","isLoaded","fetch","then","res","json","AppBar_default","Menu_default","Button_default","info","term","proj","columns","components_Chart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50a0a7b2.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Bar, Line, Pie} from 'react-chartjs-2';\n\n\nclass Chart extends Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    chartData: {\n    labels: [\n        'Staff',\n        'NeuroViz',\n        'BASIIC',\n        'Changing Perspectives',\n        'PsychVR',\n        'Core',\n        'Life You Can Lead',\n        'Pulse',\n        'Seabird Apps',\n        'Protein Structure Builder',\n        'Clearpay',\n        'Grafficity'\n      ],\n    datasets:[\n      {\n        label: 'Number of Members per Project',\n        data: [\n          4,\n          6,\n          3,\n          3,\n          2,\n          4,\n          3,\n          2,\n          3,\n          5,\n          2,\n          1\n        ],\n        backgroundColor:[\n             'rgba(255, 99, 132, 0.6)',\n             'rgba(54, 162, 235, 0.6)',\n             'rgba(255, 206, 86, 0.6)',\n             'rgba(75, 192, 192, 0.6)',\n             'rgba(153, 102, 255, 0.6)',\n             'rgba(255, 159, 64, 0.6)',\n             'rgba(255, 99, 132, 0.6)',\n             'rgba(118, 170, 140, 0.6)',\n             'rgba(245, 228, 163, 0.6)',\n             'rgba(191, 103, 186, 0.6)',\n             'rgba(229, 236, 255, 0.6)'\n          ]\n        }\n    ]\n    // props.chartData\n  }\n}}\n\n  static defaultProps = {\n    displayTitle:true,\n    displayLegend: false,\n    legendPosition:'right'\n  }\n\n  render() {\n  return (\n    <div className=\"chart\">\n    <Bar\n\t   data={this.state.chartData}\n\t   options={{\n\t\t      // maintainAspectRatio: false\n          scales: {\n            yAxes: [{\n              ticks: {\n                min: 0,\n              }\n            }]\n          },\n\n          title:{\n            display:this.props.displayTitle,\n            text:'Number of Members per Project',\n            fontSize:25\n          },\n\n          legend: {\n            display:this.props.displayLegend,\n            position:this.props.legendPosition\n          }\n\t       }}\n         />\n    </div>\n  )\n}\n}\n\nexport default Chart;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\n\nlet counter = 0;\nfunction createData(name, URL, image, message, terms_on, projects) {\n  counter += 1;\n  return { id: counter, name, URL, image, message, terms_on, projects };\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'URL', numeric: false, disablePadding: false, label: 'URL' },\n  { id: 'image', numeric: false, disablePadding: false, label: 'Image' },\n  { id: 'message', numeric: false, disablePadding: false, label: 'Message' },\n  { id: 'terms_on', numeric: false, disablePadding: false, label: 'Terms On' },\n  { id: 'projects', numeric: false, disablePadding: false, label: 'Projects'},\n];\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={numSelected === rowCount}\n              onChange={onSelectAllClick}\n            />\n          </TableCell>\n          {rows.map(row => {\n            return (\n              <TableCell\n                key={row.id}\n                numeric={row.numeric}\n                padding={row.disablePadding ? 'none' : 'default'}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            );\n          }, this)}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit,\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n});\n\nlet EnhancedTableToolbar = props => {\n  const { numSelected, classes } = props;\n\n  return (\n    <Toolbar\n      className={classNames(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            DALI\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"Delete\">\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"Filter list\">\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n};\n\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass EnhancedTable extends React.Component {\n\n  constructor(props) {\n  super(props);\n\n  // console.log(props.allData);\n  props.allData.map(key => console.log(key.terms_on));\n\n  this.state = {\n    order: 'asc',\n    orderBy: 'URL',\n    selected: [],\n    data: [\n      // props.allData.map(key=>\n      //   createData(\n      //   key.name,\n      //   key.url,\n      //   key.iconUrl,\n      //   key.message,\n      //   // key.terms_on,\n      //   // key.project\n      // )),\n      createData('Ricky', 'Jesus', 3.7, 67, 4.3, \"Ice Cream\"),\n      createData('Yenny', 452, 25.0, 51, 4.9),\n      createData('Tanya', 262, 16.0, 24, 6.0),\n      createData('Erica', 159, 6.0, 24, 4.0),\n      createData('Ruoni', 356, 16.0, 49, 3.9),\n      createData('Steven', 408, 3.2, 87, 6.5),\n      createData('Froggy', 237, 9.0, 37, 4.3),\n      createData('Aditi', 375, 0.0, 94, 0.0),\n      createData('Bella', 518, 26.0, 65, 7.0),\n      createData('Ben', 392, 0.2, 98, 0.0),\n      createData('Tim', 318, 0, 81, 2.0),\n      createData('Josh', 360, 19.0, 9, 37.0),\n      createData('Kate', 437, 18.0, 63, 4.0),\n      // createData(props.allData., 123, 532, 636, 54, 75),\n    ],\n    page: 0,\n    rowsPerPage: 10,\n  };\n}\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const { data, order, orderBy, selected, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={this.handleSelectAllClick}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              {stableSort(this.props.allData, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  const isSelected = this.isSelected(n.id);\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => this.handleClick(event, n.id)}\n                      role=\"checkbox\"\n                      aria-checked={isSelected}\n                      tabIndex={-1}\n                      key={n.id}\n                      selected={isSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox checked={isSelected} />\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        {n.name}\n                      </TableCell>\n                      <TableCell >{n.url}</TableCell>\n                      <TableCell >{n.iconUrl}</TableCell>\n                      <TableCell >{n.message}</TableCell>\n                      <TableCell >{n.terms_on}</TableCell>\n                      <TableCell >{n.project}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 100]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EnhancedTable);\n","import React from 'react';\nimport MUIDataTable from \"mui-datatables\";\n\nconst columns = [\"Name\", \"Company\", \"City\", \"State\"];\n\nconst data = [\n [\"Joe James\", \"Test Corp\", \"Yonkers\", \"NY\"],\n [\"John Walsh\", \"Test Corp\", \"Hartford\", \"CT\"],\n [\"Bob Herm\", \"Test Corp\", \"Tampa\", \"FL\"],\n [\"James Houston\", \"Test Corp\", \"Dallas\", \"TX\"],\n];\n\nconst options = {\n  filterType: 'checkbox',\n};\n\n// <MUIDataTable\n//   title={\"Employee List\"}\n//   data={data}\n//   columns={columns}\n//   options={options}\n// />\n\nexport default MUIDataTable;\n","import React, { Component } from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Chart from './components/Chart';\nimport Table from './Table.js';\nimport MUIDataTable from \"./MUIDataTable\";\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      isLoaded: false,\n      // chartData:{},\n      //\n      data:[]\n      // names:[],\n      // iconUrls:[],\n      // Urls:[].\n      // messages:[],\n      // projects:[],\n      // terms:[]\n    }\n  }\n\n  // componentWillMount(){\n  //   this.getChartData();\n  // }\n  //\n  // getChartData(){\n  //   //AJAX Call\n  //   this.setState({\n  //     chartData:{\n  //       labels: ['Boston424', 'Worcester', 'Springfield', 'Lowell', 'Cambridge', 'New Bedford'],\n  //       datasets: [\n  //         {\n  //           label:'Population',\n  //           data:[\n  //             617594,\n  //             181045,\n  //             153060,\n  //             106519,\n  //             105162,\n  //             95072\n  //           ],\n  //           backgroundColor:[\n  //             'rgba(255, 99, 132, 0.6)',\n  //             'rgba(54, 162, 235, 0.6)',\n  //             'rgba(255, 206, 86, 0.6)',\n  //             'rgba(75, 192, 192, 0.6)',\n  //             'rgba(153, 102, 255, 0.6)',\n  //             'rgba(255, 159, 64, 0.6)',\n  //             'rgba(255, 99, 132, 0.6)'\n  //           ]\n  //         }\n  //       ]\n  //     }\n  //   })\n  // }\n\n  componentDidMount() {\n    // fetch('http://mappy.dali.dartmouth.edu/members.json')\n    //   .then(function(res){\n    //     console.log(res.json());\n    //   })\n      fetch('http://mappy.dali.dartmouth.edu/members.json')\n        .then((res) => res.json())\n        .then((json) => {\n          this.setState({\n            isLoaded: true,\n            data: json,\n          })}\n        )\n      }\n\n  render() {\n\n    var { isLoaded, data } = this.state;\n\n    if(!isLoaded) {\n      return <div>Loading...</div>;\n    }\n    else {\n\n    return (\n      // <div className=\"App\">\n      //   <header className=\"App-header\">\n      //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //     <p>\n      //       Edit <code>src/App.js</code> and save to reload.\n      //     </p>\n      //     <a\n      //       className=\"App-link\"\n      //       href=\"https://reactjs.org\"\n      //       target=\"_blank\"\n      //       rel=\"noopener noreferrer\"\n      //     >\n      //       Learn React\n      //     </a>\n      //   </header>\n      //   <Chart/>\n      // </div>\n      <div className=\"App\">\n\n      <AppBar position=\"static\">\n         <Toolbar>\n           <IconButton color=\"inherit\" aria-label=\"Menu\">\n             <MenuIcon />\n           </IconButton>\n           <Typography variant=\"h6\" color=\"inherit\">\n             DALI Dashboard\n           </Typography>\n           <Button color=\"inherit\"></Button>\n         </Toolbar>\n       </AppBar>\n\n        {/*  {data.map(info => (\n            <div>\n            Name: {info.name} | URL: {info.url} | Image: {info.iconUrl} |\n            Message: {info.message} | Terms On: {info.terms_on} | Projects: {info.project}\n            </div>\n          ))} */}\n\n         {/* <Table allData={this.state.data}/> */}\n\n          <MUIDataTable\n          title={\"DALI Members \"}\n          data=\n\n          {data.map(info => (\n          [\n            info.name,\n            info.url,\n            info.iconUrl,\n            info.message,\n            (info.terms_on.map(term => (\n\n                term + \" \"\n\n            ))),\n            // [\"17S\", \"17X\", \"17F\"],\n            (info.project.map(proj => (\n\n                proj + \" \"\n              )))\n          ]\n        ))}\n\n         //  [[\"Joe James\", \"Test Corp\", \"Yonkers\", \"NY\"],\n         //   [\"John Walsh\", \"Test Corp\", \"Hartford\", \"CT\"],\n         //   [\"Bob Herm\", \"Test Corp\", \"Tampa\", \"FL\"],\n         //   [\"James Houston\", \"Test Corp\", \"Dallas\", \"TX\"],\n         // ]}\n          columns={[\"Name\", \"URL\", \"Image\", \"Message\", \"Terms On\", \"Projects\"]}/>\n\n          <Chart/> \n      </div>\n\n\n      // <Chart chartData={this.state.chartData} legendPosition='bottom'/>\n      // <Chart chartData={this.state.chartData} legendPosition='top'/>\n    )\n  }}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}